const fs = require('fs-extra');
const tap = require('tap');
const tetrisStringGenerator = require('./tetrisStringGenerator.js');
const tetrisBoard = require('./tetrisBoard.js');
const tetris = require('./tetris.js');
const tetrisFigures = require('./tetrisFigures.js');

const getNextFigure = () => tetrisFigures.s;
const nextState = tetris.getNextState(
  getNextFigure,
  tetrisBoard.getEmptyBoard(10, 20),
  { x: 0, y: 17 },
  tetrisFigures.s
);
tap.same(
  nextState,
  { board: tetrisBoard.getEmptyBoard(10, 20), position: { x: 0, y: 16 }, figure: tetrisFigures.s, done: false, isNewFigure: false }
);

const expectNewFigure = {
  "board": [
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  ],
  "figure": [
    [
      false,
      true
    ],
    [
      true,
      true
    ],
    [
      true,
      false
    ]
  ],
  "position": {
    "y": 17,
    "x": 0
  },
  "done": false,
  "isNewFigure": true
};
tap.same(tetris.getInitialState(() => tetrisFigures.s, 10, 20), expectNewFigure);
// tap.same()
const expectedNextState = {
  "board": [
    [
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  ],
  "figure": [
    [
      false,
      true
    ],
    [
      true,
      true
    ],
    [
      true,
      false
    ]
  ],
  "position": {
    "y": 17,
    "x": 0
  },
  "done": false,
  "isNewFigure": true
}
const actualNextState = tetris.getNextState(() => tetrisFigures.s, tetrisBoard.getEmptyBoard(10, 20), { x: 0, y: 0 }, tetrisFigures.s);
tap.same(actualNextState, expectedNextState);
// fs.outputFile('./abc.txt', JSON.stringify(expectedNextState, null, 2));


const actualFilledNextState = tetris.getNextState(() => tetrisFigures.o, canAddFigureToTopBoard, { x: 0, y: 0 }, tetrisFigures.o);
const expectedFilledNextState = { board: canAddFigureToTopBoard, position: { x: 0, y: 0 }, figure: tetrisFigures.o, done: true, isNewFigure: false };
tap.same(actualFilledNextState, expectedFilledNextState);
